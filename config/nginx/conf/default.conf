#odoo server
upstream odoo {
    server odoo:8069;
}

upstream odoochat {
    server odoo:8072;
}

# http -> https
# server {
#     listen 80;
#     server_name mydomain.com;
#     rewrite ^(.*) https://$host$request_uri permanent;
# }

server {
    listen 80;
    listen [::]:80;
    server_name localhost; # {IP_ADDRESS_OR_DOMAIN_NAME};

    # SSL parameters
    #ssl on;
    # listen 443 ssl http2; # managed by Certbot
    # ssl_certificate /etc/letsencrypt/live/mydomain.com/fullchain.pem; # managed by Certbot
    # ssl_certificate_key /etc/letsencrypt/live/mydomain.com/privkey.pem; # managed by Certbot
    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    #ssl_session_timeout 30m;

    # log
    # access_log /var/log/nginx/odoo.access.log;
    # error_log /var/log/nginx/odoo.error.log;

    proxy_read_timeout 720s;
    proxy_connect_timeout 720s;
    proxy_send_timeout 720s;

    # Default setting (/)
    # location / {
    #     root /usr/share/nginx/html;
    #     index index.html index.htm;
    # }

    # Redirect requests to odoo backend server at default route (/), change whatever eg. /crm
    location / {
        proxy_redirect off;
        proxy_pass http://odoo; # redirect to upstream server which set at the Line 2

        # Add Headers for odoo proxy mode
        # NOTE: $host is not working, not redirect HTTP 303 status to `/web/login`
        proxy_set_header Host $http_host; # to forward the original host requested by the client
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # to forward the original client's IP address
        proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS),eg. https
        # proxy_set_header X-Forwarded-Port 8080; # to forward the original port requested by the client -> NOT really needed.
        proxy_set_header X-Real-IP $remote_addr;
    }

    # location ~ ^/web/ {
    #     add_header Content-Security-Policy upgrade-insecure-requests;
    #     proxy_pass  http://odoo;
    #     proxy_buffering on;
    #     proxy_set_header Host $http_host;
    #     proxy_set_header X-Forwarded-Host $http_host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     # expires 864000;
    #     # allow *some ip* ;
    #     # allow *some ip* ;
    #     # allow *some ip* ;
    #     # deny all;
    # }

    # location ~ ^\/web\/(action\/|content\/|static\/|image\/|login|session\/|webclient\/) {
    #     add_header Content-Security-Policy upgrade-insecure-requests;
    #     proxy_pass  http://odoo;
    #     proxy_cache_valid 200 60m;
    #     proxy_set_header Host $http_host;
    #     proxy_set_header X-Forwarded-Host $http_host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_buffering on;
    #     # expires 864000;
    # }

    # Redirect longpoll requests to odoo longpolling port
    location /longpolling {
        proxy_pass http://odoochat;
    }

    location ~ /\.well-known/acme-challenge {
        allow all;
        root /var/www/certbot;
        default_type "text/plain";
        try_files $uri =404;
    }

    # redirect server error pages to the static page /50x.html
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # common gzip
    gzip_types text/css text/less text/plain text/xml application/xml application/json application/javascript;
    gzip on;

    # cache static data
    location ~* /web/static/ {
        proxy_cache_valid 200 60m;
        proxy_buffering on;
        expires 864000;
        proxy_pass http://odoo;
    }

    client_body_in_file_only clean;
    client_body_buffer_size 32K;
    client_max_body_size 500M;
    sendfile on;
    send_timeout 600s;
    keepalive_timeout 300;
}
